name: "Connect to Octelium"
description: "Connect to your Octelium Cluster from Github Action workflows"
branding:
  icon: "arrow-right-circle"
  color: "black"
inputs:
  domain:
    description: "Your Octelium Cluster domain"
    required: true
  auth-token:
    description: "Authentication token"
  dev:
    description: "Dev mode"
  insecure-tls:
    description: "Insecure TLS mode"
  wait:
    description: "Wait in seconds after connecting"
    default: "4"
  args:
    description: "The arguments of the octelium-connect command"
  assertion-idp:
    description: "The name of the OIDC assertion IdentityProvider"
  assertion-aud:
    description: "Override the assertion audience"
  command:
    description: "Invoke an Octelium command. By default it connects to the Cluster"
    required: true
    default: "connect"
runs:
  using: "composite"
  steps:
    - name: Install in Linux/MacOS
      if: inputs.command == 'connect' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: bash
      run: |
        curl -H "User-Agent: octelium-github-actions" -fsSL https://octelium.com/install.sh | bash

    - name: Install in Windows
      if: inputs.command == 'connect' && runner.os == 'Windows'
      shell: powershell
      run: |
        iwr https://octelium.com/install.ps1 -useb | iex

    - name: Run in Linux/MacOS
      if: inputs.command == 'connect' && (runner.os == 'Linux' || runner.os == 'macOS')
      shell: bash
      env:
        OCTELIUM_DOMAIN: ${{ inputs.domain }}
        OCTELIUM_AUTH_TOKEN: ${{ inputs.auth-token }}
        OCTELIUM_DEV: ${{ inputs.dev }}
        OCTELIUM_INSECURE_TLS: ${{ inputs.insecure-tls }}
        OCTELIUM_LOGOUT: "true"
      run: |
        octelium version
        CMD="sudo -E octelium connect"
        if [ -n "${{ inputs.assertion-idp }}" ]; then
          if [ -n "${{ inputs.assertion-aud }}" ]; then
            CMD="$CMD --assertion ${{ inputs.assertion-idp }}:github-actions:${{ inputs.assertion-aud }}"
          else
            CMD="$CMD --assertion ${{ inputs.assertion-idp }}:github-actions"
          fi
        fi

        if [ -n "${{ inputs.args }}" ]; then
          CMD="$CMD ${{ inputs.args }}"
        fi
        echo "Running: $CMD"

        $CMD &
        sleep ${{ inputs.wait }}

    - name: Logout
      if: inputs.command == 'logout'
      shell: bash
      env:
        OCTELIUM_DOMAIN: ${{ inputs.domain }}
        OCTELIUM_DEV: ${{ inputs.dev }}
        OCTELIUM_INSECURE_TLS: ${{ inputs.insecure-tls }}
      run: |
        octelium logout